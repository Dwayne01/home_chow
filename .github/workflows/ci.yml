# name: Checks

# on: [push]

# env:
#   REACT_APP_NODE_ENV: test

# jobs:
#   linting:
#     name: Linting
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [14.x]
#     steps:
#       - uses: actions/checkout@v1

#       - name: Get yarn cache directory path
#         id: yarn-cache-dir-path
#         run: echo "::set-output name=dir::$(yarn cache dir)"

#       - uses: actions/cache@v2
#         id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: yarn install
#         run: |
#           yarn install --frozen-lockfile

#       - name: lint and prettier
#         run: |
#           yarn prettier:fix
#           yarn lint

#       # unit:
#       #   name: Unit / integration Test
#       #   runs-on: ubuntu-latest
#       #   strategy:
#       #     matrix:
#       #       node-version: [14.x]
#       #   needs: linting
#       #   steps:
#       #     - uses: actions/checkout@v1

#       #     - name: Get yarn cache directory path
#       #       id: yarn-cache-dir-path
#       #       run: echo "::set-output name=dir::$(yarn cache dir)"

#       #     - uses: actions/cache@v2
#       #       id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#       #       with:
#       #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#       #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#       #         restore-keys: |
#       #           ${{ runner.os }}-yarn-
#       #     - name: Use Node.js ${{ matrix.node-version }}
#       #       uses: actions/setup-node@v1
#       #       with:
#       #         node-version: ${{ matrix.node-version }}

#       #     - name: yarn install
#       #       run: |
#       #         yarn install --frozen-lockfile

#       # - name: Unit and integration test
#       #   run: yarn test:ci

#   e2e:
#     name: Cypress e2e
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [14.x]
#     needs: linting
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       # Install NPM dependencies, cache them correctly
#       # and run all Cypress tests
#       - name: Cypress run
#         uses: cypress-io/github-action@v2
#         id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: yarn install
#         run: |
#           yarn install --frozen-lockfile

#       - name: Cypress
#         run: yarn cypress:ci

#       - uses: actions/upload-artifact@v2
#         if: failure()
#         with:
#           name: cypress-screenshots
#           path: cypress/screenshots

#       # Test run video was always captured, so this action uses "always()" condition
#       - uses: actions/upload-artifact@v2
#         if: always()
#         with:
#           name: cypress-videos
#           path: cypress/videos
name: Cypress Tests

on: [push]

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          build: npm run build
          start: npm start
